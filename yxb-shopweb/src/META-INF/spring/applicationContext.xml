<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    http://www.springframework.org/schema/util
    http://www.springframework.org/schema/util/spring-util-3.2.xsd
    ">

    <!-- 加载资源文件 其中包含变量信息，必须在 Spring 配置文件的最前面加载，即第一个加载 -->
    <!-- <context:property-placeholder location="classpath:META-INF/spring/application.properties" />
    <util:properties id="app" location="classpath:META-INF/spring/application.properties" />
    <util:properties id="db" location="classpath:META-INF/spring/database.properties" /> -->
    <context:property-placeholder location="classpath:META-INF/spring/*.properties" />

    <!-- 扫描包路径选项，使用 annotation 自动注册 bean, 并保证 @Required,@Autowired 的属性被注入， 有了该配置,那么<context:annotation-config/>这个配置就可以省略（以下配置包含了<context:annotation-config/>配置）-->
	<context:component-scan base-package ="com.yxb" />

	<!-- Hibernate 配置
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
			</props>
		</property>
		<property name="packagesToScan" value="xxx.xxx.xxx.model" />
	</bean>-->

	<!-- 配置 Hibernate 事务管理器
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>-->

	<!-- 配置事务异常封装
	<bean id="persistenceExceptionTranslationPostProcessor" class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>-->

	<!-- 声明式容器事务管理 ,transaction-manager指定事务管理器为transactionManager
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED"/>
			<tx:method name="get*" propagation="REQUIRED"/>
			<tx:method name="*" read-only="true"/>
		</tx:attributes>
	</tx:advice>-->

	<!-- aop切面编程
	<aop:config expose-proxy="true">-->
		<!-- 只对业务逻辑层实施事务
		<aop:pointcut id="txPointcut" expression="execution(*xxx.xxx.xxx.service..*.*(..))" />-->
		<!-- Advisor定义，切入点和通知分别为 txPointcut txAdvice
		<aop:advisor pointcut-ref="txPointcut" advice-ref="txAdvice"/>-->
		<!--
	</aop:config> -->

	<!-- 事务管理 -->
	<tx:annotation-driven />

	<!-- sql配置 -->
	<import resource="classpath:META-INF/spring/myBatis.xml" />

</beans>